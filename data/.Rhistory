t distribution
help dt
dt(0.025,99)
dt(0.05,99)
dt(0.025,99)
dt(0.05,99)
qt(0.025,99)
qt(0.025,4)
qnorm
qnorm(0.05)
qnorm(0.05,,,lower.tail = FALSE)
qt(1-(0.05/2), 12-2)
qt(1-(0.05/2), 30-2)
qt(1-(0.01/2), 30-2)
qt(1-(0.01/2), 12-2)
qf(1-(0.05), df1=1, df2=28)
qf(1-(0.05), df1=1, df2=5)
qf(1-(0.01), df1=1, df2=5)
qt(1-(0.05/2), 7-2)
qf
qf(1-(0.05/2), df1=1, df2=6)
qf(1-(0.05), df1=1, df2=6)
qf(1-(0.05), df1=2, df2=7)
qf(1-(0.01), df1=2, df2=7)
qt(1-(0.05/2), 7)
qt(1-(0.05/2), 6)
read.csv
# set working directory
setwd("C:/Users/Rando/Documents/College/SPRING 2020/4601/final project/ML4Anime/data")
# read excel into R
dataset <- read.csv("model_training_data.csv")
library(car)
library(lmtest)
library(rcompanion)
library(gvlma)
dataset.columns
dataset
# Histogram for y
Pop = dataset$popularity
plotNormalHistogram(Pop, xlab="y")
# Normal Q-Q Plot
qqnorm(Pop,
ylab="POPULATION BELOW POVERTY LINE Y (% total population)")
qqline(Pop, col="red")
## TRANSFORM
# Histogram for y
SQRT_P = sqrt(Pop)
plotNormalHistogram(SQRT_P, xlab="y")
# Normal Q-Q Plot
qqnorm(SQRT_P,
ylab="POPULATION BELOW POVERTY LINE Y (% total population)")
qqline(SQRT_P, col="red")
## TRANSFORM
# Histogram for y
CBRT_P = sign(Pop) * abs(Pop)^(1/3)
plotNormalHistogram(SQRT_P, xlab="y")
# Normal Q-Q Plot
qqnorm(CBRT_P,
ylab="POPULATION BELOW POVERTY LINE Y (% total population)")
qqline(CBRT_P, col="red")
## TRANSFORM
# Histogram for y
CBRT_P = sign(Pop) * abs(Pop)^(1/3)
plotNormalHistogram(CBRT_P, xlab="y")
# Normal Q-Q Plot
qqnorm(CBRT_P,
ylab="POPULATION BELOW POVERTY LINE Y (% total population)")
qqline(CBRT_P, col="red")
## TRANSFORM
# Histogram for y
LN_P = log(Pop)
plotNormalHistogram(LN_P, xlab="y")
# Normal Q-Q Plot
qqnorm(LN_P,
ylab="POPULATION BELOW POVERTY LINE Y (% total population)")
qqline(LN_P, col="red")
## TRANSFORM
TUK_P = transformTukey(Pop, plotit=FALSE)
# Histogram for y
plotNormalHistogram(TUK_P, xlab="y")
# Normal Q-Q Plot
qqnorm(TUK_P,
ylab="POPULATION BELOW POVERTY LINE Y (% total population)")
qqline(TUK_P, col="red")
mean
dev
sd
mean(TUK_P)
sd(TUK_P)
2^0.275
Pop = dataset$popularity
plotNormalHistogram(Pop, main="Distribution of popularity", xlab="popularity")
## TRANSFORM
TUK_P = transformTukey(Pop, plotit=FALSE)
# Histogram for y
plotNormalHistogram(TUK_P, main="distribution of poopularity", xlab="transformed_popularity")
plotNormalHistogram(TUK_P, main="Distribution of popularity", xlab="transformed_popularity")
count(Pop==2)
Pop==2
print(Pop==2 if TRUE)
